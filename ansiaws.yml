- hosts: localhost
  connection: local
  gather_facts: False
  vars:
      instance_type: t2.micro
      security_group: buildsrv2 
      image: ami-08bac620dc84221eb
      region: eu-west-1 
      keypair: ansible
      count: 2
      dhub_user: shooxep0daemon
      dhub_email: danielmv@mail.ru
      dhub_passwd: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38646231343362313038393135333230313864666136353165393166336633363364386264353731
          3537376661383038356238376333346333633763633866300a323932666439363730623539633636
          65383663643763323963326337643264633135666238373866366137373139343336363561363235
          3363653934316637620a653032613235353134306432363261393731343630303639613763323361
          6665
      my_boxfuse: shooxep0daemon/boxfuse:latest

  tasks:

    - name: Ensure creation of a security group
      ec2_group: 
        name: "{{ security_group }}"
        description: Security Group for prod pods
        region: "{{ region }}"
        rules:
          - proto: tcp
            ports: 
              - 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            ports:
              - 8080
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0 
      register: security_group

    - name: Ensure that there are "{{count}}" EC2 instances will be created or running already 
      ec2:
        group: "{{ security_group }}"
        instance_type: "{{ instance_type}}"
        image : "{{ image }}"
        wait : true
        region : "{{ region }}"
        keypair : "{{ keypair }}"
        count: "{{count}}"
        instance_tags:
          Name: builder
          Name: prod99
        state: running
      register: ec2

     - name: Add all instance public IPs to build group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groups: buildergrp
        ansible_ssh_private_key_file: "{{ keypair }}"
      with_items: "{{ ec2.results[0].instances }}"

    - name: Add all instance public IPs to prod group
      add_host:
        hostname: "{{ item.public_ip_address }}"
        groups: prodgrp
        ansible_ssh_private_key_file: "{{ keypair }}"
      with_items: "{{ ec2.results[1].instances }}"
    
    - name: Ensure building of a war file in a DH
      hosts: buildergrp
      remote_user: ubuntu
      become: yes

    - name: Ensure that DOCKER daemon and Python env is present
      apt:
        pkg:
        - docker.io
        - python-pip
        - python-docker
        - python3
        - python3-pip
       state: present
       update_cache: yes

     - name: Ensure module docker-py is present
      pip:
        name: docker-py
        state: present

     - name: Ensure that we have access to the DOCKERHUB
        docker_login:
         username: '{{ dhub_user }}'
         email: '{{ dhub_email }}'
         password: '{{ dhub_passwd }}'


